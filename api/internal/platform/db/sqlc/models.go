// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0

package db

import (
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Artwork struct {
	ID                 uuid.UUID   `json:"id"`
	ImagePath          string      `json:"imagePath"`
	ProcessedImagePath string      `json:"processedImagePath"`
	IsBuyable          bool        `json:"isBuyable"`
	Type               int16       `json:"type"`
	IsDeleted          bool        `json:"isDeleted"`
	Version            int16       `json:"version"`
	ArtistID           uuid.UUID   `json:"artistId"`
	PostID             uuid.UUID   `json:"postId"`
	ImageLink          pgtype.Text `json:"imageLink"`
	ProcessedImageLink pgtype.Text `json:"processedImageLink"`
}

type ArtworkPrice struct {
	ID        uuid.UUID        `json:"id"`
	Price     pgtype.Int8      `json:"price"`
	FromDate  pgtype.Timestamp `json:"fromDate"`
	ToDate    pgtype.Timestamp `json:"toDate"`
	Version   int16            `json:"version"`
	ArtworkID uuid.UUID        `json:"artworkId"`
}

type AuthUser struct {
	ID         string           `json:"id"`
	Token      pgtype.Text      `json:"token"`
	ExpiryDate pgtype.Timestamp `json:"expiryDate"`
	CreatedAt  pgtype.Timestamp `json:"createdAt"`
	RoleID     pgtype.Int4      `json:"roleId"`
	UserID     uuid.UUID        `json:"userId"`
}

type Collection struct {
	ID          uuid.UUID        `json:"id"`
	CreatedAt   pgtype.Timestamp `json:"createdAt"`
	Name        string           `json:"name"`
	Description pgtype.Text      `json:"description"`
	UserID      uuid.UUID        `json:"userId"`
	Version     int16            `json:"version"`
}

type CollectionPost struct {
	CollectionID uuid.UUID        `json:"collectionId"`
	PostID       uuid.UUID        `json:"postId"`
	CreatedAt    pgtype.Timestamp `json:"createdAt"`
}

type Comment struct {
	ID              uuid.UUID        `json:"id"`
	Content         string           `json:"content"`
	CreatedAt       pgtype.Timestamp `json:"createdAt"`
	Version         int16            `json:"version"`
	ParentCommentID uuid.UUID        `json:"parentCommentId"`
	PostID          uuid.UUID        `json:"postId"`
	UserID          uuid.UUID        `json:"userId"`
}

type Order struct {
	ID          uuid.UUID        `json:"id"`
	OrderDate   pgtype.Timestamp `json:"orderDate"`
	Amount      int64            `json:"amount"`
	Version     int16            `json:"version"`
	BuyerID     uuid.UUID        `json:"buyerId"`
	SellerID    uuid.UUID        `json:"sellerId"`
	ArtworkID   uuid.UUID        `json:"artworkId"`
	Status      int16            `json:"status"`
	OrderCode   int32            `json:"orderCode"`
	PaymentLink pgtype.Text      `json:"paymentLink"`
}

type Post struct {
	ID          uuid.UUID        `json:"id"`
	Title       string           `json:"title"`
	Description pgtype.Text      `json:"description"`
	CreatedAt   pgtype.Timestamp `json:"createdAt"`
	IsBan       bool             `json:"isBan"`
	IsDeleted   bool             `json:"isDeleted"`
	Version     int16            `json:"version"`
	UserID      uuid.UUID        `json:"userId"`
	Views       int32            `json:"views"`
}

type PostTag struct {
	PostID uuid.UUID `json:"postId"`
	TagID  uuid.UUID `json:"tagId"`
}

type Tag struct {
	ID             uuid.UUID        `json:"id"`
	TagName        string           `json:"tagName"`
	TagDescription pgtype.Text      `json:"tagDescription"`
	CreatedAt      pgtype.Timestamp `json:"createdAt"`
	Version        int16            `json:"version"`
}

type Transaction struct {
	ID              uuid.UUID        `json:"id"`
	Type            int16            `json:"type"`
	Status          int16            `json:"status"`
	TransactionDate pgtype.Timestamp `json:"transactionDate"`
	Version         int16            `json:"version"`
	OrderID         uuid.UUID        `json:"orderId"`
	Amount          int64            `json:"amount"`
	UserID          uuid.UUID        `json:"userId"`
	ModeratorID     uuid.UUID        `json:"moderatorId"`
}

type User struct {
	ID            uuid.UUID        `json:"id"`
	Username      string           `json:"username"`
	AvatarPath    pgtype.Text      `json:"avatarPath"`
	BannerPath    pgtype.Text      `json:"bannerPath"`
	Name          string           `json:"name"`
	DateOfBirth   pgtype.Timestamp `json:"dateOfBirth"`
	IsBan         bool             `json:"isBan"`
	CreatedAt     pgtype.Timestamp `json:"createdAt"`
	Version       int16            `json:"version"`
	AvatarLink    pgtype.Text      `json:"avatarLink"`
	BannerLink    pgtype.Text      `json:"bannerLink"`
	AccountNumber pgtype.Text      `json:"accountNumber"`
	BankName      pgtype.Text      `json:"bankName"`
	AccountName   pgtype.Text      `json:"accountName"`
	Email         pgtype.Text      `json:"email"`
}

type UserDownloadedArtwork struct {
	UserID    uuid.UUID `json:"userId"`
	ArtworkID uuid.UUID `json:"artworkId"`
}

type UserFollowedUser struct {
	FollowerID uuid.UUID        `json:"followerId"`
	UserID     uuid.UUID        `json:"userId"`
	FollowedAt pgtype.Timestamp `json:"followedAt"`
}

type UserLikedPost struct {
	UserID    uuid.UUID        `json:"userId"`
	PostID    uuid.UUID        `json:"postId"`
	CreatedAt pgtype.Timestamp `json:"createdAt"`
}

type UserRole struct {
	ID       int32  `json:"id"`
	RoleName string `json:"roleName"`
}

type Wallet struct {
	ID      uuid.UUID `json:"id"`
	Version int16     `json:"version"`
	UserID  uuid.UUID `json:"userId"`
	Balance int64     `json:"balance"`
}
