stages:
  - scan
  - build
  - deploy

# Scan: Runs for any merge request to validate the MR
variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

sonarcloud-check:
  stage: scan
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  only:
    - main

# Build: Runs only when code is merged into the main branch
build-job:
  stage: build
  script:
    - cp ${ENV} .env
    - echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
    - docker build -t $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$DOCKERHUB_TAG-$CI_COMMIT_SHORT_SHA .
    - docker push $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$DOCKERHUB_TAG-$CI_COMMIT_SHORT_SHA
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'  # Only runs on main branch after merge
      when: always

# Deploy: Only runs after code is merged into the main branch
deploy-prod:
  stage: deploy
  script:
    - docker rm -f ${DOCKERHUB_REPO}_${DOCKERHUB_TAG}
    - docker rmi --force $(docker images --filter=reference="*/*:${DOCKERHUB_TAG}-*" -q)
    - docker run --volume=${LOG}:/logs --restart always --name=${DOCKERHUB_REPO}_${DOCKERHUB_TAG} -dp 3000:3000 $DOCKERHUB_USERNAME/$DOCKERHUB_REPO:$DOCKERHUB_TAG-$CI_COMMIT_SHORT_SHA
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'  # Only runs on main branch
      when: always