// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: specializations.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const createSpecialization = `-- name: CreateSpecialization :exec
INSERT INTO specializations (id, name, code, time_amount, image_link, description, created_by)
VALUES ($1, $2, $3, $4,
        $5, $6, $7)
`

type CreateSpecializationParams struct {
	ID          uuid.UUID `db:"id" json:"id"`
	Name        string    `db:"name" json:"name"`
	Code        string    `db:"code" json:"code"`
	TimeAmount  *float64  `db:"time_amount" json:"timeAmount"`
	ImageLink   *string   `db:"image_link" json:"imageLink"`
	Description *string   `db:"description" json:"description"`
	CreatedBy   string    `db:"created_by" json:"createdBy"`
}

func (q *Queries) CreateSpecialization(ctx context.Context, arg CreateSpecializationParams) error {
	_, err := q.db.Exec(ctx, createSpecialization,
		arg.ID,
		arg.Name,
		arg.Code,
		arg.TimeAmount,
		arg.ImageLink,
		arg.Description,
		arg.CreatedBy,
	)
	return err
}

const getSpecializationByCode = `-- name: GetSpecializationByCode :one
SELECT id, name, code, time_amount, image_link, status, description, created_by, updated_by, created_at, updated_at FROM specializations WHERE code = $1
`

func (q *Queries) GetSpecializationByCode(ctx context.Context, code string) (Specialization, error) {
	row := q.db.QueryRow(ctx, getSpecializationByCode, code)
	var i Specialization
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Code,
		&i.TimeAmount,
		&i.ImageLink,
		&i.Status,
		&i.Description,
		&i.CreatedBy,
		&i.UpdatedBy,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const getSpecializationByID = `-- name: GetSpecializationByID :one
SELECT id, name, code, time_amount, image_link, status, description, created_by, updated_by, created_at, updated_at FROM specializations WHERE id = $1
`

func (q *Queries) GetSpecializationByID(ctx context.Context, id uuid.UUID) (Specialization, error) {
	row := q.db.QueryRow(ctx, getSpecializationByID, id)
	var i Specialization
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Code,
		&i.TimeAmount,
		&i.ImageLink,
		&i.Status,
		&i.Description,
		&i.CreatedBy,
		&i.UpdatedBy,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
