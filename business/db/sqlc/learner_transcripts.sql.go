// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: learner_transcripts.sql

package sqlc

import (
	"context"

	"github.com/google/uuid"
)

const generateLearnerTranscripts = `-- name: GenerateLearnerTranscripts :exec
INSERT INTO learner_transcripts (id, class_learner_id, transcript_id)
VALUES (uuid_generate_v4(), $1, UNNEST($2::uuid[]))
`

type GenerateLearnerTranscriptsParams struct {
	ClassLearnerID uuid.UUID   `db:"class_learner_id" json:"classLearnerId"`
	TranscriptIds  []uuid.UUID `db:"transcript_ids" json:"transcriptIds"`
}

func (q *Queries) GenerateLearnerTranscripts(ctx context.Context, arg GenerateLearnerTranscriptsParams) error {
	_, err := q.db.Exec(ctx, generateLearnerTranscripts, arg.ClassLearnerID, arg.TranscriptIds)
	return err
}

const generateLearnersTranscripts = `-- name: GenerateLearnersTranscripts :exec
INSERT INTO learner_transcripts(id, class_learner_id, transcript_id)
SELECT
    uuid_generate_v4(),
    class_learner_id,
    transcript_id
FROM
    UNNEST($1::uuid[]) AS learner_ids(class_learner_id)
        CROSS JOIN
    UNNEST($2::uuid[]) AS slot_ids(transcript_id)
`

type GenerateLearnersTranscriptsParams struct {
	ClassLearnerIds []uuid.UUID `db:"class_learner_ids" json:"classLearnerIds"`
	TranscriptIds   []uuid.UUID `db:"transcript_ids" json:"transcriptIds"`
}

func (q *Queries) GenerateLearnersTranscripts(ctx context.Context, arg GenerateLearnersTranscriptsParams) error {
	_, err := q.db.Exec(ctx, generateLearnersTranscripts, arg.ClassLearnerIds, arg.TranscriptIds)
	return err
}
